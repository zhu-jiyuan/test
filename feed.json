{
    "version": "https://jsonfeed.org/version/1",
    "title": "北纬23",
    "subtitle": "千呼万唤始出来",
    "icon": "http://zhujiyuan.xyz/images/favicon.ico",
    "description": "满怀勇敢",
    "home_page_url": "http://zhujiyuan.xyz",
    "items": [
        {
            "id": "http://zhujiyuan.xyz/2022/08/12/pyinstallerPacketExe/",
            "url": "http://zhujiyuan.xyz/2022/08/12/pyinstallerPacketExe/",
            "title": "pyinstaller精致打包exe",
            "date_published": "2022-08-12T08:02:30.553Z",
            "content_html": "<h1 id=\"pyinstaller精致打包exe\"><a class=\"anchor\" href=\"#pyinstaller精致打包exe\">#</a> pyinstaller 精致打包 exe</h1>\n<p>python 是一门解释性语言，所以当代码运行时，需要 python.exe 等解释器一句一句的对代码进行翻译（运行）。</p>\n<p>每次都要去点开始运行，或者 python <span class=\"exturl\" data-url=\"aHR0cDovL3NjcmlwdC5weQ==\">script.py</span>，这对我一个 c/c++ 信仰者，真是太痛苦了，py 有时确实很方便，因此研究打包非常有必要。</p>\n<p>（本篇重在阐述 pyinstaller 打包为什么会这么大，已经我个人用的打包压缩流程）</p>\n<h2 id=\"pyinstaller工具\"><a class=\"anchor\" href=\"#pyinstaller工具\">#</a> pyinstaller 工具</h2>\n<p>pyinstaller 可以很轻松把 py 程序打包成 exe 文件，还可以加 ico 图标，十分 nice。</p>\n<h3 id=\"本质\"><a class=\"anchor\" href=\"#本质\">#</a> 本质</h3>\n<p>因为 python 终究是一门解释语言，依赖解释器环境，pyinstaller，其实打包的是一个可以运行脚本的环境（env）。这里包含 python.exe 这个脚本解释器，因此生成的 exe 文件一般都很大 10m 以上。</p>\n<h3 id=\"我的痛点\"><a class=\"anchor\" href=\"#我的痛点\">#</a> 我的痛点</h3>\n<p>之前用过 python 打包过一些文件，大小还算可以接受，15m 左右，直到今天，给同学写了一个 GUI 界面，用了 PySide2、numpy、pandas。打包竟然到了 100 多 m，这。。。属实给我蚌埠住了。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406222723.png\" alt=\"\" /></p>\n<p>其实这里面打包了很多没有用的东西，归根到底，是全局环境的问题。</p>\n<p>压缩打包之后，大小几乎就缩小了一半。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406223300.png\" alt=\"\" /></p>\n<p>因为功能过于简单，其实这不大，如果功能开发的多的话，打包也不会大多少的。</p>\n<h3 id=\"压缩打包解决方案\"><a class=\"anchor\" href=\"#压缩打包解决方案\">#</a> 压缩打包解决方案</h3>\n<p>上文分析了，py 打包的主要原因是因为，全局环境太乱，太复杂，导致一些没有用的东西，也打包进了环境，这十分的憋屈。</p>\n<p>我的解决流程如下：</p>\n<ol>\n<li>利用 virtualenv 创建一个全新的环境。</li>\n<li>在全局环境中安装所要的库。</li>\n<li>pyinstaller 进行打包</li>\n</ol>\n<h4 id=\"1-virtualenv的安装以及使用\"><a class=\"anchor\" href=\"#1-virtualenv的安装以及使用\">#</a> 1、virtualenv 的安装以及使用</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> virtualenv</pre></td></tr></table></figure><p>virtualenv 会放在 python 安装目录下的 scripts 的文件夹下哈。如果添加环境变量了，就可以直接使用啦</p>\n<p>我们先创建一个新环境。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>virtualenv 环境名</pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406224602.png\" alt=\"\" /></p>\n<p>进入 school 下可以看到，和 python 的全局环境差不多哈</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406224742.png\" alt=\"\" /></p>\n<p>Lib 里可以看 pip 安装的包，scripts 中可以看到 pip 安装的工具。</p>\n<p>这里主要说一下这 scripts 下的工具哈。</p>\n<p>使用 cd 命令进入到 scripts 中</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220406225001038.png\" alt=\"\" /></p>\n<ul>\n<li>pip 这几个工具都是一样的，只是名字不一样而已啦，pip3.8 这些名字只是为了区分不同 python 版本下的 pip 管理工具。这里的 pip 是新环境下的哈。</li>\n<li>python.exe 就是解释器哈。运行的时候用的。</li>\n<li>activate 这个可执行文件，是切换环境的哈，运行这个文件，可以进入虚拟环境。</li>\n<li>deacticate 这个文件可以退出虚拟环境。</li>\n</ul>\n<p>我们先进入到这个虚拟环境下哈。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406225553.png\" alt=\"\" /></p>\n<p>看到这个后面出现虚拟环境的名字就说明进入到里面了哈。</p>\n<p>现在我们打包一下这个 schoolWifi 的项目哈</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406225733.png\" alt=\"\" /></p>\n<p>这个项目只用到这俩个库哈我们先安装一下所用到的库。</p>\n<p>re 库是自带的，所以我们只需要安装 requests 库。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406225922.png\" alt=\"\" /></p>\n<p>另外还需要装 pyinstaller 哈</p>\n<p>cd 命令切换到打包 project 的目录下</p>\n<pre><code>pyinstaller -w -F -i xiao.ico main.py\n</code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406230308.png\" alt=\"\" /></p>\n<p>此时已经很小很小了。</p>\n<p>还能不能再小。</p>\n<h2 id=\"压缩神器upx\"><a class=\"anchor\" href=\"#压缩神器upx\">#</a> 压缩神器 upx</h2>\n<p>在上面的 exe 的基础上，upx 还能再压缩 exe，可谓是锦上添花。</p>\n<h3 id=\"安装以及使用\"><a class=\"anchor\" href=\"#安装以及使用\">#</a> 安装以及使用</h3>\n<p>在 github 官网上下载 upx 对应系统的压缩包，解压到虚拟环境下的 scripts 下。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/QQ%E6%88%AA%E5%9B%BE20220406231432.png\" alt=\"\" /></p>\n<p>可以看到又进一步压缩了一点。实际上这个过程是加壳哈。</p>\n",
            "tags": [
                "python",
                "windows",
                "python"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/05/12/git-learning/",
            "url": "http://zhujiyuan.xyz/2022/05/12/git-learning/",
            "title": "学习Git",
            "date_published": "2022-05-12T09:51:20.000Z",
            "content_html": "<p>最近也是产出高峰期耶～</p>\n<p>咱的电脑是一个对于<strong>物理学</strong>学生十分够用<s>拉跨</s>的笔电。</p>\n<p>在我大二下学期，平时从不耍脾气的它，硬盘坏了，咱的代码自然是未能渡劫。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3podS1qaXl1YW4vcGljdHVyZV9nby9pbWcvaW1hZ2UtMjAyMjA1MTIxODAzMTMyNDAucG5n\">https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220512180313240.png</span>&quot; alt=&quot;image-20220512180313240&quot; style=&quot;zoom: 8%;&quot; /&gt;</p>\n<p>有了上次教训之后嘞，时隔 3 个月，好吧，半年。终于开始学一手 Git，来解决一下这个问题了。</p>\n<p>下面的内容是看的 git 官网下的 book。</p>\n<hr />\n<h2 id=\"git简介\"><a class=\"anchor\" href=\"#git简介\">#</a> git 简介</h2>\n<h3 id=\"为什么学习git\"><a class=\"anchor\" href=\"#为什么学习git\">#</a> 为什么学习 Git</h3>\n<p>Git 就是用来解决版本控制，和避免像我刚刚那样，硬盘坏了，再也回不去了。</p>\n<p>传统的版本控制，把东西上传到一台机器上面，所有人通过 SSH 登取出来就好，但是可能会出现咱电脑的硬盘耍小脾气的情况。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220512181105529.png\" alt=\"传统的版本控制\" /></p>\n<p>Git 是分布式的版本控制。就是说，服务器宕机了，在任何一个 fork 的主机上都可恢复数据。好耶～</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220512181358000.png\" alt=\"分布式的版本控制\" /></p>\n<h3 id=\"git的工作流程\"><a class=\"anchor\" href=\"#git的工作流程\">#</a> git 的工作流程</h3>\n<p>流程官网写的实在太好了！落泪～<s> 忍不住 copy</s></p>\n<p>git 有三种状态 <strong>已提交（committed）</strong>、<strong>已修改（modified）</strong> 和 <strong>已暂存（staged）</strong>。</p>\n<ul>\n<li>已修改表示修改了文件，但还没保存到数据库中。</li>\n<li>已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。</li>\n<li>已提交表示数据已经安全地保存在本地数据库中。</li>\n</ul>\n<p>这会让我们的 Git 项目拥有三个阶段：工作区、暂存区以及 Git 目录。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220512184737778.png\" alt=\"image-20220512184737778\" /></p>\n<p>工作区是对项目的某个版本独立提取出来的内容。 这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。</p>\n<p>暂存区是一个文件，保存了下次将要提交的文件列表信息，一般在 Git 仓库目录中。 按照 Git 的术语叫做 “索引”，不过一般说法还是叫 “暂存区”。</p>\n<p>Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，复制的就是这里的数据。</p>\n<p>基本的 Git 工作流程如下：</p>\n<ol>\n<li>在工作区中修改文件。</li>\n<li>将你想要下次提交的更改选择性地暂存，这样只会将更改的部分添加到暂存区。</li>\n<li>提交更新，找到暂存区的文件，将快照永久性存储到 Git 目录。</li>\n</ol>\n<p>如果 Git 目录中保存着特定版本的文件，就属于 <strong>已提交</strong> 状态。 如果文件已修改并放入暂存区，就属于 <strong>已暂存</strong> 状态。 如果自上次检出后，作了修改但还没有放到暂存区域，就是 <strong>已修改</strong> 状态。</p>\n<h4 id=\"版本控制快照的创建\"><a class=\"anchor\" href=\"#版本控制快照的创建\">#</a> 版本控制快照的创建</h4>\n<blockquote>\n<p>快照可以理解为简单的备份</p>\n</blockquote>\n<p>有些版本是这样储存的</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220512183249206.png\" alt=\"image-20220512183249206\" /></p>\n<p>Git 是这样的</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220512183441894.png\" alt=\"image-20220512183441894\" /></p>\n<p>不管文件改变没，都会在快照中备份，但是为了效率，如果文件没改变，git 会备份一个指向源文件的指针。</p>\n<h4 id=\"全部本地化\"><a class=\"anchor\" href=\"#全部本地化\">#</a> 全部本地化</h4>\n<p>git 拉取的是全部的镜像，所以当咱想要查看某个版本的文件时，在本地查看就好啦～</p>\n<h4 id=\"校验\"><a class=\"anchor\" href=\"#校验\">#</a> 校验</h4>\n<p>git 会在存储数据前，对所有的文件进行 sha-1 的 hash 转换，git 的索引就是这个 hash 值，o（1）的时间复杂度查找哦～</p>\n<p>这个校验，也会让文件即使发生一个空格的变化，也会被记录下来。好耶～</p>\n<h2 id=\"配置git\"><a class=\"anchor\" href=\"#配置git\">#</a> 配置 git</h2>\n<p>git 会记录每个用户的上传等信息，因此，需要配置信息。</p>\n<p>正如官网所说</p>\n<blockquote>\n<p>安装完 Git 之后，要做的第一件事就是设置你的用户名和邮件地址。 这一点很重要，因为每一个 Git 提交都会使用这些信息，它们会写入到你的每一次提交中，不可更改</p>\n</blockquote>\n<h5 id=\"用户信息\"><a class=\"anchor\" href=\"#用户信息\">#</a> 用户信息</h5>\n<pre><code class=\"language-sh\">git config --global user.name &quot;zhu-jiyuan&quot;\ngit config --global user.email 848433033@qq.com\n</code></pre>\n<p>--global 表示的是全局配置。</p>\n<p>咱可以用下面的命令，来看配置在哪</p>\n<pre><code class=\"language-sh\">git config --list --show-origin\n</code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220512205411242.png\" alt=\"image-20220512205411242\" /></p>\n<p>列出全部的配置列表（包含全局和局部</p>\n<pre><code class=\"language-sh\">git config --list \n</code></pre>\n<p>官网中提示道：你可能会看到重复的变量名，因为 Git 会从不同的文件中读取同一个配置（例如： <code>/etc/gitconfig</code>  与  <code>~/.gitconfig</code> ）。 这种情况下，Git 会使用它找到的每一个变量的最后一个配置。</p>\n<p>你可以通过输入  <code>git config &lt;key&gt;</code> ： 来检查 Git 的某一项配置</p>\n<pre><code class=\"language-console\">$ git config user.name\nJohn Doe\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Note</th>\n<th>由于 Git 会从多个文件中读取同一配置变量的不同值，因此你可能会在其中看到意料之外的值而不知道为什么。 此时，你可以查询 Git 中该变量的 <strong>原始</strong> 值，它会告诉你哪一个配置文件最后设置了该值： <code>$ git config --show-origin rerere.autoUpdate file:/home/johndoe/.gitconfig\tfalse</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"获取帮助\"><a class=\"anchor\" href=\"#获取帮助\">#</a> 获取帮助</h2>\n<p>若你使用 Git 时需要获取帮助，有三种等价的方法可以找到 Git 命令的综合手册（manpage）：</p>\n<pre><code class=\"language-console\">$ git help &lt;verb&gt;\n$ git &lt;verb&gt; --help\n$ man git-&lt;verb&gt;\n</code></pre>\n<p>例如，要想获得  <code>git config</code>  命令的手册，执行</p>\n<pre><code class=\"language-console\">$ git help config\n</code></pre>\n<p>这些命令很棒，因为你随时随地可以使用而无需联网。 如果你觉得手册或者本书的内容还不够用，你可以尝试在 Freenode IRC 服务器 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mcmVlbm9kZS5uZXQv\">https://freenode.net</span> 上的  <code>#git</code>  或  <code>#github</code>  频道寻求帮助。 这些频道经常有上百人在线，他们都精通 Git 并且乐于助人。</p>\n<p>此外，如果你不需要全面的手册，只需要可用选项的快速参考，那么可以用  <code>-h</code>  选项获得更简明的 “help” 输出：</p>\n<pre><code class=\"language-console\">$ git add -h\nusage: git add [&lt;options&gt;] [--] &lt;pathspec&gt;...\n\n    -n, --dry-run         dry run\n    -v, --verbose         be verbose\n\n    -i, --interactive     interactive picking\n    -p, --patch           select hunks interactively\n    -e, --edit            edit current diff and apply\n    -f, --force           allow adding otherwise ignored files\n    -u, --update          update tracked files\n    --renormalize         renormalize EOL of tracked files (implies -u)\n    -N, --intent-to-add   record only the fact that the path will be added later\n    -A, --all             add changes from all tracked and untracked files\n    --ignore-removal      ignore paths removed in the working tree (same as --no-all)\n    --refresh             don't add, only refresh the index\n    --ignore-errors       just skip files which cannot be added because of errors\n    --ignore-missing      check if - even missing - files are ignored in dry run\n    --chmod (+|-)x        override the executable bit of the listed files\n</code></pre>\n<p>我也不想抄，可是它<s>叫我哥哥诶</s>写的太好了。</p>\n",
            "tags": [
                "note",
                "note",
                "git"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/05/10/quantumult-x-and-js/",
            "url": "http://zhujiyuan.xyz/2022/05/10/quantumult-x-and-js/",
            "title": "Quantumult X的JavaScript编写",
            "date_published": "2022-05-10T08:43:35.000Z",
            "content_html": "<p>Quantumult X 是大二上学期入手的，当时咱还是搞物理的呢，哪有时间折腾这些。本着 15 块钱不能白花的想法，这些天研究了一下。</p>\n<p>上一篇内容大致说了一下 Quantumult X，但是最激动人心的莫过于可以运行 JavaScript。</p>\n<p>本文将简单讲解 Quantumult X 的脚本编写，请自行补充<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdA==\"> JavaScript 基础知识</span>。</p>\n<p>本着咱也不是太懂的事实，就找俩例子简单说一下叭～</p>\n<h2 id=\"b站签到\"><a class=\"anchor\" href=\"#b站签到\">#</a> b 站签到 &gt;.&lt;</h2>\n<p>b 站直播里能签到换硬币，你不会不知道吧？？？</p>\n<h3 id=\"抓签到包\"><a class=\"anchor\" href=\"#抓签到包\">#</a> 抓签到包</h3>\n<p>F12，签到，找签到数据包</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220510170502967.png\" alt=\"image-20220510170502967\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220510170538309.png\" alt=\"image-20220510170538309\" /></p>\n<h3 id=\"编写脚本\"><a class=\"anchor\" href=\"#编写脚本\">#</a> 编写脚本</h3>\n<p>其实 Quantumult X 有自动生成脚本，但是面对复杂的，它是解决不了的啦。</p>\n<p>下面是我写的一个类，可以方便以后进行操作哈。（后面会讲这个类是怎么写的）</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">initEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 读取 Quantumult X 数据库里面的数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">read</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> $prefs<span class=\"token punctuation\">.</span><span class=\"token function\">valueForKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 通知</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">notify</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> subtitle<span class=\"token punctuation\">,</span> message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> subtitle<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">// 随机数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getRandom</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">min<span class=\"token punctuation\">,</span>max</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> min<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 延迟</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sleep</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">milliseconds</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">const</span> date <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">let</span> currentDate <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            currentDate <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>currentDate <span class=\"token operator\">-</span> date <span class=\"token operator\">&lt;</span> milliseconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">//get 请求</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">get</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        options<span class=\"token punctuation\">[</span><span class=\"token string\">\"method\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"GET\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        $task<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">reason</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>reason<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">//post 请求</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">post</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        options<span class=\"token punctuation\">[</span><span class=\"token string\">\"method\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"POST\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        $task<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">reason</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>reason<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">// 结束</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">done</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token function\">$done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>先在 Quantumult X 下创建一个 js 文件</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220510171348307.png\" alt=\"image-20220510171348307\" /></p>\n<p>把刚刚的类复制到最下面，然后就可以写代码啦。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 先初始化一个类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">initEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>咱们开始写一个函数，完成签到的操作。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">dosign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://api.live.bilibili.com/xlive/web-ucenter/v1/sign/DoSign\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string-property property\">\"cookie\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"自己的cookie\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string-property property\">\"user-agent\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36 Edg/101.0.1210.39\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span>headers</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token comment\">// 发一个 get 请求</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    $<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span>response</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">let</span> body <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        $<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 这个代表结束整个程序。</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 调用函数即可</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token function\">dosign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220510172959875.png\" alt=\"image-20220510172959875\" /></p>\n<p>根据俩次的请求回应，我们修改一下签到函数。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">dosign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://api.live.bilibili.com/xlive/web-ucenter/v1/sign/DoSign\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string-property property\">\"cookie\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"your cookie\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token string-property property\">\"user-agent\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36 Edg/101.0.1210.39\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span>headers</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    $<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span>response</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">let</span> body <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>code<span class=\"token operator\">===</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                $<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bili签到~\"</span><span class=\"token punctuation\">,</span>body<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span>body<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>specialText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                $<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bili签到~\"</span><span class=\"token punctuation\">,</span>body<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        $<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果如下</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220510173731266.png\" alt=\"image-20220510173731266\" /></p>\n<h3 id=\"自动获取cookie\"><a class=\"anchor\" href=\"#自动获取cookie\">#</a> 自动获取 COOKIE</h3>\n<p>Quantumult X 内部有一个小型的数据库，也就是官网的数据持久化操作。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220510174340728.png\" alt=\"image-20220510174340728\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220510174424044.png\" alt=\"image-20220510174424044\" /></p>\n<p>同时 Quantumult X 的 rewrite 操作可以运行 js 脚本，我们只需要，把 cookie 放入这里面就行啦。</p>\n<h5 id=\"cookie存入函数\"><a class=\"anchor\" href=\"#cookie存入函数\">#</a> cookie 存入函数</h5>\n<p>下面的代码是在 Github 上找到一个获取 COOKIE 的模板。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> currentC <span class=\"token operator\">=</span> $request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>Cookie<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">existC</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> $prefs<span class=\"token punctuation\">.</span><span class=\"token function\">valueForKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">create</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">currentC<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> $prefs<span class=\"token punctuation\">.</span><span class=\"token function\">setValueForKey</span><span class=\"token punctuation\">(</span>currentC<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentC <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">existC</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      currentC <span class=\"token operator\">!=</span> <span class=\"token function\">existC</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>currentC<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"更新Cookie成功\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"目前的cookie一致\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          currentC <span class=\"token operator\">!=</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">?</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token punctuation\">(</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>currentC<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"获取cookie成功\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"获取Cookie失败\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">$done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>编辑一个重写，当打开 b 站直播中心时自动运行，获取 cookie，放入数据库中。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DoSign\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BiliBili\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"biliCookie\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getCookie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">var</span> currentC <span class=\"token operator\">=</span> $request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>Cookie<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">existC</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> $prefs<span class=\"token punctuation\">.</span><span class=\"token function\">valueForKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">create</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">currentC<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> $prefs<span class=\"token punctuation\">.</span><span class=\"token function\">setValueForKey</span><span class=\"token punctuation\">(</span>currentC<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentC <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">existC</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      currentC <span class=\"token operator\">!=</span> <span class=\"token function\">existC</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>currentC<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"更新Cookie成功\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"目前的cookie一致\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          currentC <span class=\"token operator\">!=</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">?</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token punctuation\">(</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>currentC<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"获取cookie成功\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"获取Cookie失败\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token function\">$done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>挂到到重写上即可</p>\n<pre><code class=\"language-conf\">hostname = api.live.bilibili.com\n\n^https:\\/\\/api\\.live\\.bilibili\\.com\\/xlive\\/web-ucenter\\/v1\\/sign\\/DoSign url script-request-header https://raw.githubusercontent.com/zhu-jiyuan/myJavaScripts/master/biliGetCookie.js\n</code></pre>\n<h2 id=\"htu校园网web认证\"><a class=\"anchor\" href=\"#htu校园网web认证\">#</a> HTU 校园网 web 认证</h2>\n<p>quantumult X 的网络请求是异步的，这对于咱一直没用过异步的孩子，多少有些痛苦。</p>\n<p>由于这个脚本需要串行执行。</p>\n<p>思路是这样的，先访问 1.1.1.1，获取 web 认证的 userip 和认证 ip，然后把获得的 ip 填入校园网认证表单中，发送 POST 请求，完成认证。</p>\n<p>我写了两种方式实现，仅供参考</p>\n<h3 id=\"await串行\"><a class=\"anchor\" href=\"#await串行\">#</a> await 串行</h3>\n<p>await 会让等待异步执行完之后，再执行下面的代码。但是只能在异步函数中使用。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">initEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> stuNo <span class=\"token operator\">=</span> <span class=\"token string\">\"学号\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> passwd <span class=\"token operator\">=</span> <span class=\"token string\">\"密码\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">let</span> ips <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">await</span> <span class=\"token function\">getIp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ips<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    $<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getIp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://1.1.1.1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">const</span> myquests <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> headers</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        $<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>myquests<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span>response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">let</span> body <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token comment\">//console.log(body);</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                ips <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token comment\">//console.log(ips);</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">loginHtu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://\"</span><span class=\"token operator\">+</span>ips<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\"/portalAuthAction.do\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token string-property property\">\"wlanuserip\"</span><span class=\"token operator\">:</span>ips<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token string-property property\">\"wlanacname\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"HNSFDX_H3C-S8808-X\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token string-property property\">\"chal_id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token string-property property\">\"chal_vector\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token string-property property\">\"auth_type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"PAP\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token string-property property\">\"seq_id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token string-property property\">\"req_id\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token string-property property\">\"wlanacIp\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"210.42.255.60\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token string-property property\">\"ssid\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token string-property property\">\"vlan\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token string-property property\">\"mac\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token string-property property\">\"message\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token string-property property\">\"bank_acct\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token string-property property\">\"isCookies\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token string-property property\">\"version\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token string-property property\">\"authkey\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"88----89\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token string-property property\">\"url\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token string-property property\">\"usertime\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0 \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token string-property property\">\"listpasscode\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token string-property property\">\"listgetpass\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token string-property property\">\"getpasstype\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token string-property property\">\"randstr\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2880\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token string-property property\">\"domain\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token string-property property\">\"isRadiusProxy\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token string-property property\">\"usertype\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0 \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token string-property property\">\"isHaveNotice\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token string-property property\">\"times\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"12\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\" weizhi\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string-property property\">\" smsid\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token string-property property\">\"freeuser\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token string-property property\">\"freepasswd\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token string-property property\">\"listwxauth\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token string-property property\">\"templatetype\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1 \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token string-property property\">\"tname\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"shida_pc_portal_V1.1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token string-property property\">\"logintype\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token string-property property\">\"act\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token string-property property\">\"is189\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token string-property property\">\"terminalType\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token string-property property\">\"checkterminal\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token string-property property\">\"portalpageid\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"101\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token string-property property\">\"listfreeauth\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token string-property property\">\"viewlogin\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token string-property property\">\"userid\"</span><span class=\"token operator\">:</span>stuNo<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token string-property property\">\"authGroupId\"</span><span class=\"token operator\">:</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token string-property property\">\"useridtemp\"</span><span class=\"token operator\">:</span>stuNo<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token string-property property\">\"passwd\"</span><span class=\"token operator\">:</span>passwd</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">const</span> myquests <span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span>headers<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t$<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>myquests<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span>response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">initEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">read</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> $prefs<span class=\"token punctuation\">.</span><span class=\"token function\">valueForKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">notify</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> subtitle<span class=\"token punctuation\">,</span> message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t<span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> subtitle<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getRandom</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">min<span class=\"token punctuation\">,</span>max</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> min<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sleep</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">milliseconds</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token keyword\">const</span> date <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">let</span> currentDate <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            currentDate <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>currentDate <span class=\"token operator\">-</span> date <span class=\"token operator\">&lt;</span> milliseconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token comment\">//get 请求</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">get</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        options<span class=\"token punctuation\">[</span><span class=\"token string\">\"method\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"GET\"</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        $task<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">reason</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>reason<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token comment\">//post 请求</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">post</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        options<span class=\"token punctuation\">[</span><span class=\"token string\">\"method\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"POST\"</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        $task<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">reason</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>reason<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token comment\">// 结束</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">done</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>\t\t<span class=\"token function\">$done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"回调串行\"><a class=\"anchor\" href=\"#回调串行\">#</a> 回调串行</h3>\n<p>这个请参考 MDN 上的 JavaScript 教程</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Variables used by Scriptable.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// These must be at the very top of the file. Do not edit.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// icon-color: green; icon-glyph: magic;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * Connect HTU WIFI</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * by@zhujiyuan</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * version 1.0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token keyword\">const</span> $ <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">initEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token keyword\">const</span> stdNo <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token keyword\">const</span> passwd <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token keyword\">let</span> ips <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token function\">connectHTU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre> <span class=\"token keyword\">function</span> <span class=\"token function\">connectHTU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t <span class=\"token function\">getIp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token comment\">//console.log(ips[0]);</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'http://'</span><span class=\"token operator\">+</span>ips<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">'/portalAuthAction.do'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token string\">'wlanuserip='</span><span class=\"token operator\">+</span>ips<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">'&amp;wlanacname=HNSFDX_H3C-S8808-X&amp;chal_id=&amp;chal_vector=&amp;auth_type=PAP&amp;seq_id=&amp;req_id=&amp;wlanacIp=210.42.255.60&amp;ssid=&amp;vlan=&amp;mac=&amp;message=&amp;bank_acct=&amp;isCookies=&amp;version=&amp;authkey=88----89&amp;url=&amp;usertime=0&amp;listpasscode=0&amp;listgetpass=0&amp;getpasstype=0&amp;randstr=8289&amp;domain=&amp;isRadiusProxy=false&amp;usertype=0&amp;isHaveNotice=0&amp;times=12&amp;weizhi=0&amp;smsid=&amp;freeuser=&amp;freepasswd=&amp;listwxauth=0&amp;templatetype=1&amp;tname=shida_pc_portal_V1.1&amp;logintype=0&amp;act=&amp;is189=false&amp;terminalType=&amp;checkterminal=false&amp;portalpageid=101&amp;listfreeauth=0&amp;viewlogin=1&amp;userid='</span><span class=\"token operator\">+</span>stdNo<span class=\"token operator\">+</span><span class=\"token string\">'&amp;authGroupId=&amp;useridtemp='</span><span class=\"token operator\">+</span>stdNo<span class=\"token operator\">+</span><span class=\"token string\">'&amp;passwd='</span><span class=\"token operator\">+</span>passwd<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token comment\">//console.log(url);</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token comment\">//console.log(body);</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token keyword\">const</span> myquests <span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span>body</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t$<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>myquests<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span>response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t<span class=\"token keyword\">let</span> resp <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t<span class=\"token comment\">//console.log(resp);</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"河南师范\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HTU connection success~\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            \t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HTU connection failed\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t$<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre> </pre></td></tr><tr><td data-num=\"52\"></td><td><pre> </pre></td></tr><tr><td data-num=\"53\"></td><td><pre> <span class=\"token keyword\">function</span> <span class=\"token function\">getIp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://1.1.1.1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t <span class=\"token keyword\">const</span> myquests <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t\t <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>\t\t <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> headers</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t $<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>myquests<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span>response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t\t <span class=\"token keyword\">let</span> body <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t\t <span class=\"token comment\">//console.log(body);</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t\t\t ips <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|[0-1]\\d&#123;2&#125;|[1-9]?\\d)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>\t\t\t <span class=\"token comment\">//console.log(ips[1]);</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>\t\t\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ips<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">===</span><span class=\"token string\">\"1.1.1.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>\t\t\t\t <span class=\"token comment\">//console.log(\"over!\");</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>\t\t\t\t $<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>\t\t\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t\t\t <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"71\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre> </pre></td></tr><tr><td data-num=\"73\"></td><td><pre> </pre></td></tr><tr><td data-num=\"74\"></td><td><pre> </pre></td></tr><tr><td data-num=\"75\"></td><td><pre> <span class=\"token keyword\">function</span> <span class=\"token function\">initEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre> </pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">read</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>\t\t <span class=\"token keyword\">return</span> $prefs<span class=\"token punctuation\">.</span><span class=\"token function\">valueForKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">notify</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> subtitle<span class=\"token punctuation\">,</span> message</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t <span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> subtitle<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre> </pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getRandom</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">min<span class=\"token punctuation\">,</span>max</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>\t\t <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> min<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sleep</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">milliseconds</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>\t\t <span class=\"token keyword\">const</span> date <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t <span class=\"token keyword\">let</span> currentDate <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t currentDate <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>currentDate <span class=\"token operator\">-</span> date <span class=\"token operator\">&lt;</span> milliseconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t <span class=\"token comment\">//get 请求</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">get</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t options<span class=\"token punctuation\">[</span><span class=\"token string\">\"method\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"GET\"</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t $task<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">reason</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>reason<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t <span class=\"token comment\">//post 请求</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">post</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\t\t options<span class=\"token punctuation\">[</span><span class=\"token string\">\"method\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"POST\"</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>\t\t $task<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\t <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">reason</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>reason<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t <span class=\"token comment\">// 结束</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">done</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t <span class=\"token function\">$done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>（待更新，如果你有看到我，请提醒他去更新一下）</p>\n<hr />\n<h4 id=\"change-logs\"><a class=\"anchor\" href=\"#change-logs\">#</a> Change logs</h4>\n<h5 id=\"may-252022\"><a class=\"anchor\" href=\"#may-252022\">#</a> May 25,2022</h5>\n<ul>\n<li>更新校园网 js 示例</li>\n</ul>\n",
            "tags": [
                "router",
                "soft",
                "JavaScript",
                "quantumult x"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/05/04/quantumult-x-note/",
            "url": "http://zhujiyuan.xyz/2022/05/04/quantumult-x-note/",
            "title": "Quantumult X一款神奇的软件",
            "date_published": "2022-05-04T15:40:49.000Z",
            "content_html": "<p>quantumult x，一款极简，性价比极高的路由软件。<br />\n简单的说，这个软件可以实现如下</p>\n<ul>\n<li>VPN 代理</li>\n<li>路由分流</li>\n<li>捕获网络请求，也就是在应用层抓包</li>\n<li>重写数据包</li>\n<li>执行 JavaScript 脚本</li>\n</ul>\n<p>对应用层熟悉的同学，是不是和我一样狂喜。</p>\n<h2 id=\"我的折腾之旅\"><a class=\"anchor\" href=\"#我的折腾之旅\">#</a> 我的折腾之旅</h2>\n<p>这款软件的性价比太高了，很遗憾的是，作者没有给予相关的文档，所以开始的小白很难折腾。还好作者在 GitHub 上给了相关的 sample。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nyb3NzdXRpbGl0eS9RdWFudHVtdWx0LVg=\">quantumult x 官方</span></p>\n<h3 id=\"相关资料\"><a class=\"anchor\" href=\"#相关资料\">#</a> 相关资料</h3>\n<p>这里我收集了一些网上的资料。</p>\n<p>大致配置，相关功能的介绍几乎都在这个作者写的 ====&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubm90aW9uLnNvL1F1YW50dW11bHQtWC0xZDMyZGRjNmU2MWM0ODkyYWQyZWM1ZWE0N2YwMDkxNw==\">Quantumult-X 不完全教程</span></p>\n<p>这篇文章大致讲了配置文件的基本格式，以及各个功能。</p>\n<h3 id=\"术语简解\"><a class=\"anchor\" href=\"#术语简解\">#</a> 术语简解</h3>\n<p>我这里也简单解释一下，这几个在配置文件中的模块是啥意思。详细的请看上面的教程。</p>\n<p>首先说一下 quantumult x 支持远程挂载文件，就你可以直接过载 github 或者服务器上托管的配置或者规则。</p>\n<p>所有在 remote 标签下的都是远程挂载的配置文件，在 local 下都是本地的配置文件。</p>\n<ul>\n<li>\n<p>分流（filter），比如你有一个科学上网的节点，国内网站你想直接用本地的网，国外网站用自己的节点。这个需要分流进行实现。分流一共三类。</p>\n<ul>\n<li>direct，走本地的网络，直连</li>\n<li>reject，直接丢掉，不入站。把广告的 host 走 reject，就会把广告屏蔽掉。</li>\n<li>proxy，代理，就是走选择的代理节点。</li>\n</ul>\n</li>\n<li>\n<p>重写（rewrite），这个是 quantumult x 里的 BEST 功能之一了，你可以把收到的 response 进行重写，再返回给你的设备，这样就可以破解一些东西。同时还可以重写 request。十分强大。后续再说。</p>\n</li>\n<li>\n<p>server，这个就是节点。节点就在这里添加。</p>\n</li>\n<li>\n<p>general 是一般配置，这个在相关资料里说的很清楚了。不懂可以去那里看哈。</p>\n</li>\n<li>\n<p>dns，域名解析，你可以多添加几个 dns 服务器，quantumult x 会测试这些 dns 服务器，选择最优的。</p>\n</li>\n<li>\n<p>policy，策略组，这是 quantumult x 进行解耦的神器，不得不说作者有些东西，为了更方便管理分流和节点，quantumult x 提出了策略组，策略组可以管理特定的 host 走哪个分流，或者那个节点。</p>\n</li>\n<li>\n<p>task，quantumult x 执行 js 脚本的配置。</p>\n</li>\n<li>\n<p>http_backend，http 捕获配置，没研究过这个，待填坑。</p>\n</li>\n<li>\n<p>mitm，这个模块，简单的说就是，在添加完 quantumult x 的 CA 证书后，quantumult x 有权力对你的流量进行分析包含 https，但是它不会全部进行分析，只对 hostname 里面的 host 进行分析。</p>\n</li>\n</ul>\n<h3 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h3>\n<p>我的配置分流参考了这几位作者的。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0tPUC1YSUFPL1F1YW50dW11bHRY\">KOP-XIAO</span> 的资源解析器</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RpdmluZUVuZ2luZS9Qcm9maWxlcw==\">DivineEngine</span> 的分流、重写策略</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vbmRhbmVlL1VuYmxvY2tOZXRlYXNlTXVzaWM=\">网易云解锁</span>，自己的国内服务器搭建的。</li>\n<li>以及自己做的一些分流规则，重写规则</li>\n<li>自己的 JavaScript 脚本</li>\n</ul>\n<p>规则不难写，很多前人收集好的，fork 一份备份，换成自己的，定时更新备份。就行啦。</p>\n<p>了解完大致的规则，慢慢就会做出来适合自己的配置。十分的香。</p>\n<h2 id=\"javascript之疑惑\"><a class=\"anchor\" href=\"#javascript之疑惑\">#</a> JavaScript 之疑惑</h2>\n<p><s>quantumult x 没有给相关的 api 文档，这可真是太难受了，家人们，破防了。还好有些人以及写好了一些 js 示例。加上 sample 上面有些注释。。。我大致悟到了这么多东西。</s></p>\n<p>JS 所有的 API，都在自带的配置模板里，如果之前没有用过 JavaScript 发送网络请求等，还是十分建议参考 =&gt;<a href=\"https://zhujiyuan.xyz/2022/05/10/quantumult-x-and-js/\"> 这篇</a></p>\n<h3 id=\"cookie问题\"><a class=\"anchor\" href=\"#cookie问题\">#</a> cookie 问题</h3>\n<p>quantumult x 内封装了一个轻量级数据库，存放键值对，就是 quantumult x 的持久化策略，利用重写，捕获 request 包的 headers，可以放到里面供 js 脚本使用。</p>\n<h3 id=\"jd签到的脚本怎么写\"><a class=\"anchor\" href=\"#jd签到的脚本怎么写\">#</a> jd 签到的脚本怎么写？</h3>\n<p>GitHub 开源的京东脚本作者，写了一个 env 环境的 class，这个类可以更方便的发 post，get 等请求，同时判断是 quantumult x 还是小火箭等 app。</p>\n<h3 id=\"广告过滤\"><a class=\"anchor\" href=\"#广告过滤\">#</a> 广告过滤</h3>\n<p>这个是 quantumult x 一个很吸引人的地方了，quantumult x 可以分流过滤广告，就是自己设置或者抄别人的规则，广告全部走 reject。练习可以找 QQ 空间的广告联系。<br />\n最 nb 的是 js 重写过滤，重写可以在 request 和 response 两个地方运行 js 脚本，之前有过 python 爬虫经验的狂喜！！！知道该怎么做了吧，这个就不说了。</p>\n<h3 id=\"网易云音乐解锁\"><a class=\"anchor\" href=\"#网易云音乐解锁\">#</a> 网易云音乐解锁</h3>\n<p>这个就是在服务器上搭建一个节点，然后在你进网易云听歌的时候，网易云音乐域名走服务器搭建的这个节点，返回给你其他音乐平台的歌曲直链。设置好分流和策略组即可。<br />\n这个节点搭建坑比较多。回头说</p>\n<h3 id=\"调试js问题\"><a class=\"anchor\" href=\"#调试js问题\">#</a> 调试 js 问题</h3>\n<p>quantumult x 的 js 调试太不方便了，对我来说，我目前手上没得 mac。只有 iPad 和 iPhone 个一台。<br />\n我的方案是，  <s>windows 电脑搭建一个 samba 服务器，苹果自带的文件可以直接连默认端口的 samba 服务器，然后让 quantumult x 直接跑 samba 里面的 js。</s>  windows 下挂载 iCloud 云盘，直接修改 quantumult x 下的 js 文件。<br />\n<img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220509213606111.png\" alt=\"image-20220509213606111\" /></p>\n<h2 id=\"javascript之编写\"><a class=\"anchor\" href=\"#javascript之编写\">#</a> <s>JavaScript 之编写</s></h2>\n<p><s>明天再说</s></p>\n<hr />\n<h4 id=\"change-logs\"><a class=\"anchor\" href=\"#change-logs\">#</a> Change logs</h4>\n<h5 id=\"may-92022\"><a class=\"anchor\" href=\"#may-92022\">#</a> May 9,2022</h5>\n<ul>\n<li>Javascript 在另一篇。</li>\n<li>更改 js 调试方案。</li>\n</ul>\n<h5 id=\"may-252022\"><a class=\"anchor\" href=\"#may-252022\">#</a> May 25,2022</h5>\n<ul>\n<li>更新 JavaScript 问题</li>\n</ul>\n",
            "tags": [
                "auto",
                "quantumult x",
                "router"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/05/01/appleShortCuts/",
            "url": "http://zhujiyuan.xyz/2022/05/01/appleShortCuts/",
            "title": "浅谈苹果快捷指令",
            "date_published": "2022-05-01T03:26:20.000Z",
            "content_html": "<p>苹果快捷指令，使用过苹果产品的同学，应该都不陌生，apple 给用户提供的一套可视化 SDK。</p>\n<p>我作为一个大三 dog，目前手上持有的设备</p>\n<ul>\n<li>ipad</li>\n<li>iphone se2</li>\n<li>xiaomi8</li>\n<li>以及其他乱七八糟的</li>\n</ul>\n<p>我个人对 apple 在移动端（不含 macos）的感觉，是非常好的。因为我对手机的要求就是小，不影响平日生活。一个 2000mA 的电池，5.7 寸以下的屏幕，几乎就是 my baby!</p>\n<p>快捷指令的出现，让我开始了更多有趣的事情。十分香～</p>\n<h2 id=\"shortcut的妙用\"><a class=\"anchor\" href=\"#shortcut的妙用\">#</a> shortcut 的妙用</h2>\n<p>之前看西红市首富的时候，里面的夏竹台湾腔，给我留下了很深的印象，哈哈哈哈，因此我的 siri 就是台湾腔了。</p>\n<p>快捷指令可以让 siri 读文本诶～，所以我就有了夏竹。</p>\n<h3 id=\"htu校园网\"><a class=\"anchor\" href=\"#htu校园网\">#</a> htu 校园网</h3>\n<p>又到了鞭尸校园网，htu 的校园网 web 的认证，你到底弹还是不弹？？？薛定谔的 web 认证弹框，密码还得自己输入。我真的是焯了。</p>\n<p>这里说一下 1.1.1.1 这个 ip，它可以重定向到 web 认证网站，但是浏览器默认是 get 方法，htu 的校园网有时候就是 get 不能重定向到认证网站。但是 put 可以。然后通过 web 认证 url 获取到 web 认证登录 post 请求表单里的 userip。之后就可以畅快的进行登录啦。</p>\n<p>哼～，多年爬虫经验的我一眼就看出来啦。</p>\n<p>&lt;video src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3podS1qaXl1YW4vcGljdHVyZV9nby9pbWcvUlBSZXBsYXlfRmluYWwxNjUxMzc3MzMwLm1wNA==\">https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/RPReplay_Final1651377330.mp4</span>&quot;&gt;&lt;/video&gt;</p>\n<h4 id=\"设置自动化\"><a class=\"anchor\" href=\"#设置自动化\">#</a> 设置自动化</h4>\n<p>当我们连接 HTU5G 时自动运行连接校园网的快捷指令。这就太好了。不得不说 appleos 底层进程间通信设计的十分很人性化。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/IM4.PNG\" alt=\"IM4\" /></p>\n<p>（溜了溜了，回头再更新</p>\n",
            "tags": [
                "apple",
                "shortcuts"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/04/30/redmiAx6/",
            "url": "http://zhujiyuan.xyz/2022/04/30/redmiAx6/",
            "title": "折腾红米ax6",
            "date_published": "2022-04-30T12:47:11.000Z",
            "content_html": "<p>此篇记录一下前段时间折腾路由器的经历。哈哈哈哈哈，真是太爽了，路由器这东西，真上头。</p>\n<p>📍</p>\n<h2 id=\"选择路由器\"><a class=\"anchor\" href=\"#选择路由器\">#</a> 选择路由器</h2>\n<p>我选的是红米 ax6，这款路由器，可以说是理财产品了，哈哈哈哈，价格一直涨，二手原价卖。就离谱。</p>\n<p>我主要是看重它以下几点</p>\n<ul>\n<li>芯片好，高通的芯片，散热刚刚滴～</li>\n<li>支持 wifi6</li>\n<li>穿墙也不错</li>\n</ul>\n<p>加上看好碰见小米商城有货，我直接手起刀落。</p>\n<p>长个样子。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220505005059497.png\" alt=\"image-20220505005059497\" /></p>\n<h2 id=\"刷openwrt\"><a class=\"anchor\" href=\"#刷openwrt\">#</a> 刷 openwrt</h2>\n<p>openwrt 一个开源的路由器系统，可玩性强，深受 “大家” 喜爱，我也不例外，诶～，年轻就是折腾。</p>\n<p>我用的 openwrt 是直接在恩山下载一个网友的。不得不说，英雄所见略同。这个网友和我一样，只有一个需求，就是能科学上网就行啦。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430210845243.png\" alt=\"image-20220430210845243\" /></p>\n<p>插件这块大家可以自己装啦。</p>\n<p>米家的固件实在是苦不堪言，红米 ax6 跑千 M 网和玩一样，根本没有压力。我选择 openwrt 更高的自由度。</p>\n<h3 id=\"解锁ssh\"><a class=\"anchor\" href=\"#解锁ssh\">#</a> 解锁 SSH</h3>\n<p>ax6 最难刷机的原因就是 SSH 太难解。</p>\n<p>我是参考的 b 站这位网友给的教程，解锁的。<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXE5NHkxZjdmag==\">视频链接</span></p>\n<p>我不是特别喜欢这个视频的风格，所以这里我简单概括一下他说的这些东西。</p>\n<ol>\n<li>\n<p>将 AX6 的固件降级为 1.0.18 版本</p>\n</li>\n<li>\n<p>红米 ax6 解锁需要一个 openwrt 路由（能上网的）。</p>\n</li>\n<li>\n<p>用虚拟机搭建一个 openwrt 系统的虚拟路由，就是开一个虚拟机。配置网络环境虚拟机网络环境</p>\n</li>\n<li>\n<p>上传 wireless.sh 文件到虚拟机，执行 sh /root/wireless.sh</p>\n<pre><code class=\"language-sh\">#wireless.sh如下\n#!/bin/ash\n# SPDX-License-Identifier: GPL-3.0-only\n#\n# Copyright (C) 2020 yyjdelete\n# Copyright (C) 2021 Robert Marko &lt;robimarko@gmail.com&gt;\n# Copyright (C) 2021 Tianling Shen &lt;cnsztl@immortalwrt.org&gt;\n#\n# Original threads:\n# Redmi AX6 AX3000: https://www.right.com.cn/forum/thread-4060726-1-1.html\n# Xiaomi AX6000/AX9000: https://forum.openwrt.org/t/openwrt-support-for-xiaomi-ax9000/98908/34\n\ninfo_font=&quot;\\033[36m[Info]\\033[0m&quot;\nsuccess_font=&quot;\\033[32m[Success]\\033[0m&quot;\nwarning_font=&quot;\\033[33m[Warning]\\033[0m&quot;\n\necho -e &quot;$&#123;warning_font&#125; Please make sure your router has wireless support!&quot;\necho -e &quot;$&#123;warning_font&#125; Please make sure your router is restored to factory settings (not configured)!&quot;\necho -e &quot;$&#123;warning_font&#125; Please make sure you've backed up the network and wireless settings!&quot;\necho -e &quot;$&#123;warning_font&#125; Please make sure you've connected the router via *wired ethernet*!&quot;\necho -e &quot;$&#123;warning_font&#125; Running this script will change your *network* settings!&quot;\nread -p &quot;Use Ctrl+C to exit or press enter key to continue...&quot;\n\necho -e &quot;&quot;\necho -e &quot;$&#123;info_font&#125; Adding xqsystem controller...&quot;\ncat &gt; &quot;/usr/lib/lua/luci/controller/admin/xqsystem.lua&quot; &lt;&lt;EOF\nmodule(&quot;luci.controller.admin.xqsystem&quot;, package.seeall)\n\nfunction index()\n    local page   = node(&quot;api&quot;)\n    page.target  = firstchild()\n    page.title   = (&quot;&quot;)\n    page.order   = 100\n    page.index = true\n    page   = node(&quot;api&quot;,&quot;xqsystem&quot;)\n    page.target  = firstchild()\n    page.title   = (&quot;&quot;)\n    page.order   = 100\n    page.index = true\n    entry(&#123;&quot;api&quot;, &quot;xqsystem&quot;, &quot;token&quot;&#125;, call(&quot;getToken&quot;), (&quot;&quot;), 103, 0x08)\nend\n\nlocal LuciHttp = require(&quot;luci.http&quot;)\n\nfunction getToken()\n    local result = &#123;&#125;\n    result[&quot;code&quot;] = 0\n    result[&quot;token&quot;] = &quot;; nvram set ssh_en=1; nvram set uart_en=1; nvram set boot_wait=on; nvram commit; uci set wireless.@wifi-iface[0].key=\\`mkxqimage -I\\`; uci commit; sed -i 's/channel=.*/channel=\\&quot;debug\\&quot;/g' /etc/init.d/dropbear; /etc/init.d/dropbear start;&quot;\n    LuciHttp.write_json(result)\nend\nEOF\n\necho -e &quot;$&#123;info_font&#125; Changing network settings...&quot;\nset -x\n# /etc/config/dhcp\nuci set dhcp.lan.ra_management='1'\nuci del dhcp.lan.start\nuci del dhcp.lan.limit\nuci del dhcp.lan.leasetime\nuci set dhcp.lan.ignore='1'\n# /etc/config/network\nuci set network.lan.ipaddr='169.254.31.1'\nuci -q commit\nset +x\n\necho -e &quot;$&#123;success_font&#125; All settings are applied.\\n&quot;\necho -e &quot;$&#123;info_font&#125; Please now disconnect from this router, and connect to your Xiaomi/Redmi router.&quot;\necho -e &quot;&quot;\necho -e &quot;$&#123;info_font&#125; For Xiaomi AX3000/AX6000/AX9000:&quot;\necho -e &quot;       Open your browser, access the following URL:&quot;\necho -e &quot;         http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/xqsystem/extendwifi_connect_inited_router?ssid=MEDIATEK-ARM-IS-GREAT&amp;password=ARE-YOU-OK&amp;admin_username=root&amp;admin_password=admin&amp;admin_nonce=xxx&quot;\necho -e &quot;&quot;\n\n\necho -e &quot;&quot;\necho -e &quot;$&#123;warning_font&#125; Restarting network...&quot;\nwifi reload &gt;&quot;/dev/null&quot; 2&gt;&amp;1\n/etc/init.d/network restart &gt;&quot;/dev/null&quot; 2&gt;&amp;1\n\n</code></pre>\n</li>\n<li>\n<p>打开 windows 移动热点，这时候电脑就会多出来一个网卡（这个热点的）</p>\n</li>\n<li>\n<p>把刚刚刷好的 openwrt 桥接到 windows 热点上。ps: 热点必须联网</p>\n</li>\n<li>\n<p>登录 AX6，复制当前 AX6 后台链接中 &quot;stock=&quot; 后面的字符串；</p>\n</li>\n<li>\n<p>替换链接中相应的数据后，复制到浏览器点击回车，解锁 SSH；<br />\n<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMzEuMS9jZ2ktYmluL2x1Y2kvO3N0b2s9\">http://192.168.31.1/cgi-bin/luci/;stok=</span>&lt;stock&gt;/api/xqsystem/extendwifi_connect_inited_router?ssid=op&amp;password=12345678&amp;admin_username=root&amp;admin_password=password&amp;admin_nonce=xxx</p>\n</li>\n<li>\n<p>提示解锁成功之后，再次登录 ax6 后台，5G 频段路由密码，就是 SSH 密码了</p>\n</li>\n</ol>\n<p>到这里 SSH 就解锁了。</p>\n<h3 id=\"刷入openwrt\"><a class=\"anchor\" href=\"#刷入openwrt\">#</a> 刷入 openwrt</h3>\n<p>红米 ax6 有两个系统分区，你在 0 区，就把 openwrt 刷到 0 区，反之刷到 1 区。</p>\n<p>就是说，你在 0 分区刷，固件会上传到 1 分区。你在 1 分区刷，固件会上传到 0 分区。所以刷之前要切换分区先。</p>\n<p>我这里没扩容，因为第一次刷的那个路由器变砖了，我在网上没找到很完善的扩容方案。不扩容只能刷 30m 以下的哈，超过会变砖，用小米官方的刷机软件可求回来。但是扩容刷机失败，不能用小米官网的刷机求了。。。</p>\n<p>这样就不会出现变砖的情况了。</p>\n<p>下面以 1 分区举例</p>\n<ol>\n<li>\n<p>检测当前分区</p>\n<pre><code class=\"language-sh\">nvram get flag_last_success\n</code></pre>\n</li>\n<li>\n<p>切换分区</p>\n<pre><code class=\"language-sh\">nvram set flag_last_success=0\nnvram set flag_boot_rootfs=0\nnvram commit\nreboot\n</code></pre>\n</li>\n<li>\n<p>把 openwrt 的固件上传到 /tmp 下面，第一次上传.ubi 后缀的文件的哈<img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430212942511.png\" alt=\"image-20220430212942511\" /></p>\n</li>\n<li>\n<p>刷入固件</p>\n<pre><code class=\"language-sh\">ubiformat /dev/mtd13 -y -f /tmp/你上传的固件文件名\n</code></pre>\n</li>\n<li>\n<p>切换分区</p>\n<pre><code class=\"language-sh\">nvram set flag_last_success=1\nnvram set flag_boot_rootfs=1\nnvram commit\nreboot\n</code></pre>\n</li>\n</ol>\n<p>结束。</p>\n<p>剩下的就是切换不同系统的代码了</p>\n<pre><code class=\"language-sh\">OP切换到小米系统\nfw_setenv  flag_last_success 0\nfw_setenv flag_boot_rootfs 0\nreboot\n\n小米系统切换到OP\nnvram set flag_last_success=1\nnvram set flag_boot_rootfs=1\nnvram commit\nreboot\n</code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430213828289.png\" alt=\"image-20220430213828289\" /></p>\n<p>我想解锁完 ssh 之后就已经实现完全自由啦。还有什么是比一个 linux 更自由的呢～</p>\n<h2 id=\"开始接入校园网\"><a class=\"anchor\" href=\"#开始接入校园网\">#</a> 开始接入校园网</h2>\n<p>河南师范大学的校园网，狗的一，一个账号一个设备。这能行吗？？？咱就是说，一百个不同意。</p>\n<p>ax6 有两个频段，5G 和 2.4G，学校的也是分这俩个频段。</p>\n<p>这里要科普一下这个 5G 和 2.4G 频段哈。这里是频率，不是我们手机上说的那个 5G 时代哈。</p>\n<ul>\n<li>\n<p>5G 频段在信号强距离时，抗干扰能力远大于 2.4G，其下载速度和上传速度明显哈。</p>\n</li>\n<li>\n<p>2.4G 频段信号范围比较广哈，穿墙效果更好。</p>\n</li>\n</ul>\n<p>其实从物理也可得出来啦，5G 频段，频率大了，波长短了，衍射效果不好，粒子性更强。波长大的，会更易绕过墙壁等障碍物。</p>\n<p>我所在的寝室校园网 5G 很好。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430222656166.png\" alt=\"image-20220430222656166\" /></p>\n<p>我的方案是，用路由器的 5G 信道，连接到校园网 5G 网上，在 ssh 连接路由器，curl 命令，发送一个 post 请求，完成 web 认证。之后用路由器的 2.4G 频段就可以上网了。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430222926530.png\" alt=\"image-20220430222926530\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430223040679.png\" alt=\"image-20220430223040679\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220430223440228.png\" alt=\"image-20220430223440228\" /></p>\n<p>在定时运行这个 shell 脚本，就可以让路由器一直使用学校的校园网啦。</p>\n<p>速度与直连校园网无差别。十分 nice</p>\n<p>唉，先到这吧，学校没有 ipv6，难受了，加上我的笔记本没法插网线，没法远程开机，难受～。让我们上了研究生再写这篇文章吧。</p>\n",
            "tags": [
                "router",
                "network",
                "router",
                "xiaomi"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/04/21/win11-android/",
            "url": "http://zhujiyuan.xyz/2022/04/21/win11-android/",
            "title": "win11玩安卓",
            "date_published": "2022-04-21T14:56:30.000Z",
            "content_html": "<p>win11 集成了安卓，这个功能一直没吸引我，直到最近在写一些安卓 app 的时候，才玩了这个。</p>\n<p>win11 用的是一个虚拟的容器跑的安卓。可以用 ADB 进行调试这个系统，所以就十分方便对于开发安卓 app 来说，直接就可以进行调试了。</p>\n<h2 id=\"安装安卓vm\"><a class=\"anchor\" href=\"#安装安卓vm\">#</a> 安装安卓 vm</h2>\n<p>首先在设置中，把区域调成美国。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220421230618265.png\" alt=\"image-20220421230618265\" /></p>\n<p>然后就可以去 Microsoft store 里面安装了。<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9lbi11cy9wL3dpbmRvd3Mtc3Vic3lzdGVtLWZvci1hbmRyb2lkLXdpdGgtYW1hem9uLWFwcHN0b3JlLzlwMzM5NXZ4OTFucg==\">直达</span></p>\n<h2 id=\"安装adb\"><a class=\"anchor\" href=\"#安装adb\">#</a> 安装 ADB</h2>\n<p>在等待安装子系统的时候，可以去下载一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlvL3JlbGVhc2VzL3BsYXRmb3JtLXRvb2xz\"> ADB</span></p>\n<p>直接解压即可，记得添加到环境变量之中。</p>\n<h2 id=\"开始安卓之旅\"><a class=\"anchor\" href=\"#开始安卓之旅\">#</a> 开始安卓之旅</h2>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220421231121235.png\" alt=\"image-20220421231121235\" /></p>\n<p>打开设置 vm，打开开发者调试。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220421231259091.png\" alt=\"image-20220421231259091\" /></p>\n<p>给 vm 分配资源。勾选 Hyper-V 服务。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220421231551568.png\" alt=\"image-20220421231551568\" /></p>\n<h3 id=\"adb安装apk应用\"><a class=\"anchor\" href=\"#adb安装apk应用\">#</a> ADB 安装 apk 应用</h3>\n<p>现在就可以尽情玩耍了。熟悉 ADB 的同学这，，，十分的酸爽～</p>\n<h4 id=\"连接vm\"><a class=\"anchor\" href=\"#连接vm\">#</a> 连接 VM</h4>\n<pre><code class=\"language-sh\">adb connect ip\n</code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220421232137909.png\" alt=\"image-20220421232137909\" /></p>\n<h4 id=\"安装apk\"><a class=\"anchor\" href=\"#安装apk\">#</a> 安装 apk</h4>\n<pre><code class=\"language-sh\">adb install appName.apk\n</code></pre>\n",
            "tags": [
                "windows",
                "android",
                "vm"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/04/19/c-five-zone/",
            "url": "http://zhujiyuan.xyz/2022/04/19/c-five-zone/",
            "title": "c++的四大区",
            "date_published": "2022-04-19T13:02:40.000Z",
            "content_html": "<p>今天开始学习使用 c++，之前一直使用 python 比较多。语言各有千秋，只有最合适。好啦，现在到了使用 c++ 的时候惹。希望我能够喜欢上这个语言。</p>\n<p>let's go!😽</p>\n<h2 id=\"内存四大区\"><a class=\"anchor\" href=\"#内存四大区\">#</a> 内存四大区</h2>\n<p>编程语言的内存管理，都是类似的，以 c++ 为例，分为以下四大区</p>\n<ul>\n<li>代码区</li>\n<li>全局区</li>\n<li>栈区</li>\n<li>堆区</li>\n</ul>\n<p>每个区域都有不同的生命周期，咳咳咳，想要更好的编程，当然要好好学习内存管理。</p>\n<p>这块内容像学习心法一样，之修外，而不修内功，会走火入魔，同时不能更好、更快的学习新的东西，对编程语言也了解不够深入。</p>\n<h3 id=\"代码区\"><a class=\"anchor\" href=\"#代码区\">#</a> 代码区</h3>\n<p>代码区，顾名思义，这是存放代码的地方，但是 cpu 只认识指令。</p>\n<p>编译器在编译代码后，会把代码翻译成二进制指令集合，代码区就是存放这些指令集合的。</p>\n<p>所以代码区是不能更改的，代码区公用一份内存空间，为了节省空间啦。比如，代码中很多地方都有用到一个函数，但是这个函数在代码区只有一份。c++ 很抠门的。</p>\n<p>代码区，在程序运行的时候，会优先加载到内存中哟。</p>\n<h3 id=\"全局区\"><a class=\"anchor\" href=\"#全局区\">#</a> 全局区</h3>\n<p>c++ 的全局区，不同于一些编程语言，全局区包含常量，静态变量，全局变量等等。十分强大。</p>\n<p>全局区的这些东西，同样在编译阶段都会加载完成。</p>\n<p>程序运行时，与代码区一同先加载到内存之中。</p>\n<ul>\n<li>常量，包含字符串常量，数字常量等等</li>\n<li>静态变量，在编译时就会运行加载，并且只运行一次，存在全局区。</li>\n<li>全局变量，有程序员自己定义的变量，作用在全局区，所有的东西都能访问到它。</li>\n</ul>\n<h3 id=\"栈区\"><a class=\"anchor\" href=\"#栈区\">#</a> 栈区</h3>\n<p>栈区，是编译器的管理的内存，所有的临时变量都会储存在这里，交给编译器管理，十分方便，缺点栈的深度有限，有时候，我们需要使用大量递归，会栈溢出。</p>\n<h3 id=\"堆区\"><a class=\"anchor\" href=\"#堆区\">#</a> 堆区</h3>\n<p>堆区又程序员手动管理，例如 c 语言的 malloc 或者是 c++ 的 new，都是在堆区申请的内存，需要手动管理。</p>\n<ul>\n<li>优点，操作更加灵活方便。给予程序员很高的权限。</li>\n<li>缺点，增加了程序员的心智负担，内存往往没有得到很好的控制。</li>\n</ul>\n",
            "tags": [
                "note",
                "c++"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/04/18/machine-learning-9-week/",
            "url": "http://zhujiyuan.xyz/2022/04/18/machine-learning-9-week/",
            "title": "machine learning 9周学习",
            "date_published": "2022-04-18T07:00:10.000Z",
            "content_html": "<p>开个新坑哈，本文只需更新，关于对机器学习的一些想法和 9 周学习的简单概况。</p>\n<p>本文所有向量默认为列向量。</p>\n<p>&lt;i class=&quot;fa-solid fa-atom&quot;&gt;&lt;/i&gt;</p>\n<p>所有实例均在<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUxpNHkxUzdBYw==\"> &lt;i class=&quot;fa-brands fa-bilibili&quot;&gt;&lt;/i&gt;</span></p>\n<h2 id=\"线性回归\"><a class=\"anchor\" href=\"#线性回归\">#</a> 线性回归</h2>\n<h3 id=\"简单介绍\"><a class=\"anchor\" href=\"#简单介绍\">#</a> 简单介绍</h3>\n<p>线性回归是我的入坑点，简单的说，线性回归是用<strong>线性函数</strong>解决一些拟合、分类等问题。</p>\n<p>人类的科学局限于数学的发展，可往往数学是复杂的、抽象的、劝退大多数人学习的，就连科学家也不例外，我们希望使用最简单的数学，去解决问题。</p>\n<p>下面我们来看一下这个令我们愉快的线性函数。</p>\n<p>线性函数，y = w1<em>x1 + w2</em>x2 + ...... +b</p>\n<p>或者用它的矩阵表达形式 &lt; math xmlns=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTA==\">http://www.w3.org/1998/Math/MathML</span>&quot; display=&quot;block&quot;&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;/math&gt;</p>\n<p>使用矩阵表达，极大的节约了我们书写的时间，也方便阅读，十分酸爽。</p>\n<h3 id=\"如何使用它解决问题\"><a class=\"anchor\" href=\"#如何使用它解决问题\">#</a> 如何使用它解决问题</h3>\n<p>现在我们要用这个函数去拟合一组数据或者曲线。例如女生身高与腿长的关系，iris 数据集的关系，等等</p>\n<p>我们假设身高与腿长成正比。</p>\n<p>&lt;math xmlns=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTA==\">http://www.w3.org/1998/Math/MathML</span>&quot; display=&quot;block&quot;&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/math&gt;</p>\n<p>其中 E 是方差，Y 是真实结果，&lt;math xmlns=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTA==\">http://www.w3.org/1998/Math/MathML</span>&quot;display=&quot;block&quot;&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo &gt; 是预测结果。&lt;/mo&gt;&lt;/math&gt;</p>\n<p>根据我们中学学的知识，E 越小，说明我们预测的越接近真实情况。</p>\n<p>我们不妨再多看一眼这个函数，X 是给出来的，只有 W,b 不知道，E 是 W 和 b 的多元函数，这不就是 E (W,b) 吗。</p>\n<p>再根据我们所学的导数，就可以找到 E 最小时 W 和 b 的值是多少，从而拟合他们。</p>\n<p>&lt;math xmlns=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTA==\">http://www.w3.org/1998/Math/MathML</span>&quot; display=&quot;block&quot;&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∂&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∂&lt;/mi&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/math&gt;</p>\n<p>&lt;math xmlns=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTA==\">http://www.w3.org/1998/Math/MathML</span>&quot; display=&quot;block&quot;&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∂&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∂&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/math&gt;</p>\n<p>但是这样直接去求得极值，总觉得不够机器学习，我想让机器自己去找到这个值，而不是直接算出来（这里可以用西瓜书上的正则方程去直接求出来 W_b 的列向量，因为后续矩阵求导会介绍，所以这里不展开）。</p>\n<p>下面我们来介绍梯度下降和一个简单的小小小神经元。</p>\n<h3 id=\"梯度下降初相识\"><a class=\"anchor\" href=\"#梯度下降初相识\">#</a> 梯度下降初相识</h3>\n<p>当我们面对比较大的数据，直接去求 w_b 的值，往往不妥，一口吃个胖子，令人头大。所以我们采用另一种方法，随机梯度下降。</p>\n<p>一口吃不完的东西，分开食之。</p>\n<p>我们先随机初始化 w_b。然后每次抽取一个样本更新 w_b。</p>\n<p>&lt;math xmlns=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTA==\">http://www.w3.org/1998/Math/MathML</span>&quot; display=&quot;block&quot;&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∂&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∂&lt;/mi&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/math&gt;</p>\n<p>&lt;math xmlns=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTA==\">http://www.w3.org/1998/Math/MathML</span>&quot; display=&quot;block&quot;&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∂&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;∂&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/math&gt;</p>\n<p>α 是学习率，在 0-1 之间。</p>\n<p>在今后的笔记中，将会尽可能去用这种方法去解决问题。</p>\n<ul>\n<li>梯度下降可以帮助我们了解中间的过程。</li>\n<li>还有助于我们在使用 python 这种解释型语言时，更方便交互。</li>\n</ul>\n<h2 id=\"深度学习\"><a class=\"anchor\" href=\"#深度学习\">#</a> 深度学习</h2>\n<p>我突然想说一说深度学习，看懂上面的线性回归后，其实你可以搭建一个属于自己的神经网络了。</p>\n<p>我想我们这时候来说 deep learning 最好。</p>\n<p>（待补坑，先考完试）😢</p>\n",
            "tags": [
                "note",
                "ML"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/04/09/Hi-markdown/",
            "url": "http://zhujiyuan.xyz/2022/04/09/Hi-markdown/",
            "title": "Hi,markdown.",
            "date_published": "2022-04-09T15:51:59.000Z",
            "content_html": "<p>&lt;i class=&quot;fa-brands fa-markdown&quot;&gt;&lt;/i &gt; 这篇开个新坑 markdown 的操作哈。&lt;i class=&quot;fa-brands fa-markdown&quot;&gt;&lt;/i&gt;</p>\n<p>慢慢更新。如何更舒服的写 md。</p>\n<p>&lt;!-- toc --&gt;</p>\n<h2 id=\"插入icon\"><a class=\"anchor\" href=\"#插入icon\">#</a> 插入 icon</h2>\n<p>我使用的是这个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20v\"> fontawesome</span> ，Font Awesome 提供了很多 icon 的矢量图，只需要简单设置几步即可方便在 markdown 里使用 icon。</p>\n<p>效果如下哈。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLw==\">&lt;i class=&quot;fa-solid fa-code&quot;&gt;&lt;/i&gt;</span>github</p>\n<p>&lt;i class=&quot;fa-solid fa-terminal&quot;&gt;&lt;/i &gt; 终端</p>\n<p>十分舒服。</p>\n<h3 id=\"配置font-awesome\"><a class=\"anchor\" href=\"#配置font-awesome\">#</a> 配置 font awesome</h3>\n<h4 id=\"下载web包\"><a class=\"anchor\" href=\"#下载web包\">#</a> 下载 web 包</h4>\n<p>在官网上下载最新版本的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20vdmVyc2lvbnM=\"> web 包</span></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220410002330259.png\" alt=\"image-20220410002330259\" /></p>\n<p>free 的哈，足够啦。</p>\n<h4 id=\"配置js-css\"><a class=\"anchor\" href=\"#配置js-css\">#</a> 配置 js、css</h4>\n<p>在 hexo 主题下的 layout 中找 head.ejs 这种全局的文件</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220410002645903.png\" alt=\"image-20220410002645903\" /></p>\n<p>在里面添加</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">defer</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/all.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">defer</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/v4-shims.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/all.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>到这里之后，就可以愉快插入啦</p>\n<h3 id=\"开始插入icon\"><a class=\"anchor\" href=\"#开始插入icon\">#</a> 开始插入 icon</h3>\n<p>在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb250YXdlc29tZS5jb20vaWNvbnMv\">官网上</span>找到自己先要的 icon。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220410003059745.png\" alt=\"image-20220410003059745\" /></p>\n<p>点击复制 HTML 代码。</p>\n<p>在 markdown 下</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>只需这样就可以添加进去</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fa-brands fa-apple<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span>就可以添加图标</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token url\">[<span class=\"token content\">&lt;i class=\"fa-brands fa-apple\">&lt;/i></span>](<span class=\"token url\">\"zhujiyuan.xyz\"</span>)</span>超链接</pre></td></tr></table></figure><h2 id=\"typorapicgo\"><a class=\"anchor\" href=\"#typorapicgo\">#</a> Typora&amp;Picgo</h2>\n<p>Typroa 这个 markdown 编辑器，就不用多说了哈，优雅。</p>\n<p>picgo 是一个图床管理工具哈。</p>\n<p>两者配合爽的一！</p>\n<p><strong>把图片粘贴到 Typroa 时，会自动上传到图床上。</strong></p>\n<h3 id=\"配置picgo\"><a class=\"anchor\" href=\"#配置picgo\">#</a> 配置 picgo</h3>\n<p>这里我使用的 github 的图床哈。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220410003924040.png\" alt=\"image-20220410003924040\" /></p>\n<p>自己建一个新仓库专门放图片等等，去 GitHub 里获取 token（在 github 设置的开发者设置里）。填上即可</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220410004136550.png\" alt=\"image-20220410004136550\" /></p>\n<h3 id=\"配置typora\"><a class=\"anchor\" href=\"#配置typora\">#</a> 配置 typora</h3>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220410004306971.png\" alt=\"image-20220410004306971\" /></p>\n<p>到这里就可以享受 markdown 图片插入啦。</p>\n<h2 id=\"hexo使用typora中的emoji\"><a class=\"anchor\" href=\"#hexo使用typora中的emoji\">#</a> hexo 使用 typora 中的 emoji</h2>\n<p>在 typora 中只要打上 &quot;:&quot;，再输入英语单词就可以打出 emoji，十分方便。</p>\n<p>😂</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220419221232036.png\" alt=\"image-20220419221232036\" /></p>\n<p>但是使用 hexo 在默认情况下，生成的网页不能渲染出来这个表情。</p>\n<p>如此方便的东西怎么能放弃使用呢，让我们去折腾出来。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnhhb3h1LmNuL2FyY2hpdmVzL2hleG8tdXNlLWVtb2pp\">在这篇博客</span>给出来了解决方案，我在这里简单再记录一下，以免失效。</p>\n<p>Hexo 默认的 markdown 渲染引擎不支持将 Github emoji 渲染到静态的 html 页面中，我们换一个支持 emoji 的引擎，再增加一个 emoji 插件即可。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> un hexo-renderer-marked --save</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-markdown-it --save</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> markdown-it-emoji --save</pre></td></tr></table></figure><p>在 hexo 主配置文件下，添加这个</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## markdown 渲染引擎配置，默认是 hexo-renderer-marked，这个插件渲染速度更快，且有新特性</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>footnote</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>sup</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>sub</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>abbr</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">-</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>emoji</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token key atrule\">anchors</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">collisionSuffix</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'v'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">permalinkClass</span><span class=\"token punctuation\">:</span> header<span class=\"token punctuation\">-</span>anchor</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">permalinkSymbol</span><span class=\"token punctuation\">:</span> ¶</pre></td></tr></table></figure>",
            "tags": [
                "edit",
                "note",
                "markdown",
                "note"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/01/08/WritingService/",
            "url": "http://zhujiyuan.xyz/2022/01/08/WritingService/",
            "title": "linux中service的编写",
            "date_published": "2022-01-07T16:00:00.000Z",
            "content_html": "<pre><code class=\"language-sh\">vim /lib/systemd/system/服务名.service\n</code></pre>\n<pre><code class=\"language-sh\">\n#例如frp的服务端\n\n[Unit]\nDescription=fraps service\nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nExecStart=/root/frp/frps -c /root/frp/frps.ini  #此处安实际情况修改\n\n[Install]\nWantedBy=multi-user.target\n\n\n</code></pre>\n<pre><code class=\"language-sh\">#客户端运行服务创建：vi /lib/systemd/system/frpc.service\n\n#qq机器人的服务\n[Unit]\nDescription=qqbot\n\n[Service]\nType=simple\nExecStart=/root/push_qq/go-cqhttp\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>\n",
            "tags": [
                "Linux",
                "Linux",
                "Ubuntu"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/01/05/CustomServerInit/",
            "url": "http://zhujiyuan.xyz/2022/01/05/CustomServerInit/",
            "title": "科学上网&基本的网络服务器&内网穿透",
            "date_published": "2022-01-04T16:00:00.000Z",
            "content_html": "<h2 id=\"科学上网vpn的搭建\"><a class=\"anchor\" href=\"#科学上网vpn的搭建\">#</a> 科学上网 VPN 的搭建</h2>\n<p>主流的翻墙软件有很多</p>\n<ul>\n<li>ssr</li>\n<li>v2</li>\n</ul>\n<p>......</p>\n<p>v2 自用一键脚本</p>\n<pre><code class=\"language-sh\">#首先用firewall-cmd开v2的端口\nfirewall-cmd --permanent --zone=public --add-port=v2端口/tcp\n\n#安装curl\nsudo apt update\nsudo apt install curl -y\n\n#以下脚本二选一\nbash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)  #带面板，要多开个面板端口，ip+端口访问面板，进行v2设置。\n\nbash &lt;(curl -s -L https://git.io/v2ray.sh)#不带面板，省端口\n\n\n#加速器的安装\n\nwget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh\n\n\n</code></pre>\n<h2 id=\"基本服务器的安装\"><a class=\"anchor\" href=\"#基本服务器的安装\">#</a> 基本服务器的安装</h2>\n<h3 id=\"samba服务器跨系统平台传输文件\"><a class=\"anchor\" href=\"#samba服务器跨系统平台传输文件\">#</a> samba 服务器（跨系统平台传输文件）</h3>\n<p>这个很香，家里的 per 电脑可以用来做 nas。贼方便。</p>\n<pre><code class=\"language-sh\">sudo apt-get upgrade \nsudo apt-get update \n\n#安装samba服务器\nsudo apt-get install samba samba-common\n\n#创建共享目录\nsudo mkdir /home/zhujiyuan\n\nsudo chmod 777 /home/zhujiyuan\n\n#添加samba用户（注意必须是linux下已经有的用户）\n\nsudo smbpasswd -a zhujiyuan\n\n#配置smb文件\n\nsudo vim /etc/samba/smb.conf\n\n#在文件最后面加上如下,这里可以自定义参考samba的文档\n[share]\ncomment = share folder\nbrowseable = yes\npath = /home/zhujiyuan\ncreate mask = 0700\ndirectory mask = 0700\nvalid users = linuxidc\nforce user = linuxidc\nforce group = linuxidc\npublic = yes\navailable = yes\nwritable = yes\n\n#把samba添加进防火墙白名单\nfirewall-cmd --add-service=samba --permanent\n\n#重启samba服务器\nsystemctl restart smbd\n\n\n</code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220105225934309.png\" alt=\"image-20220105225934309\" /></p>\n<h4 id=\"注意\"><a class=\"anchor\" href=\"#注意\">#</a> 注意</h4>\n<ul>\n<li>windows 下要先在设置中开启 smb 服务，才能访问</li>\n<li>win+R 键，输入 \\\\ip 即可。</li>\n</ul>\n<h3 id=\"apache服务器搭建网站的\"><a class=\"anchor\" href=\"#apache服务器搭建网站的\">#</a> apache 服务器 (搭建网站的)</h3>\n<pre><code class=\"language-sh\">sudo apt update &amp; apt install apache2\n</code></pre>\n<h2 id=\"内网穿透\"><a class=\"anchor\" href=\"#内网穿透\">#</a> 内网穿透</h2>\n<p>内网穿透是用来让家里的电脑，通过其他措施，使得其他设备可以通过公网找到它。</p>\n<p>一般家里的网都是经过好几次 NAT，使用 frp 这个开源的软件，可以帮助我们内网穿透。</p>\n<h3 id=\"内网穿透流程\"><a class=\"anchor\" href=\"#内网穿透流程\">#</a> 内网穿透流程</h3>\n<p>通过服务器对局域网的设备进行端口映射。</p>\n<h3 id=\"搭建步骤\"><a class=\"anchor\" href=\"#搭建步骤\">#</a> 搭建步骤</h3>\n<h4 id=\"一-搭建内网穿透服务器\"><a class=\"anchor\" href=\"#一-搭建内网穿透服务器\">#</a> 一、搭建内网穿透服务器</h4>\n<p>需要用一个有公网 ip 的服务器。</p>\n<p>去 github 上下载合适的 frp 的软件包</p>\n<pre><code class=\"language-sh\">tar -xzvf 软件包\ncd 软件包\n\n#配置服务端文件\nvim frps.ini\n\n#具体可参考官方文档\n[common]\n bind_port = 7000 \n authentication_method = token\n token = #连接密码\n dashboard_port = 7500\n# dashboard 用户名密码，可选，默认为空,这里是web配置\n dashboard_user = admin\n dashboard_pwd = admin\n \n #启动服务\n \n sudo ./frps -c ./frps.ini\n</code></pre>\n<h4 id=\"二-配置客户端\"><a class=\"anchor\" href=\"#二-配置客户端\">#</a> 二、配置客户端</h4>\n<pre><code>#这里我使用的win10，linux等操作系统大同小异\n\n#打开frpc.ini配置\n[common]\nserver_addr = 服务器ip\nserver_port = 7000\ntoken = #密码，与服务端相同\n\n[ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 7001\n\n[web]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 80\nremote_port = 7002\n\n</code></pre>\n<p>cmd 下启动即可。</p>\n<p>用 ipad 随时随地通过服务器 ip 远程连接家里的电脑</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220105230626923.png\" alt=\"image-20220105230626923\" /></p>\n",
            "tags": [
                "Linux",
                "server",
                "Linux",
                "Ubuntu",
                "fq"
            ]
        },
        {
            "id": "http://zhujiyuan.xyz/2022/01/04/linux_init/",
            "url": "http://zhujiyuan.xyz/2022/01/04/linux_init/",
            "title": "linux服务器初始化（个人自用）",
            "date_published": "2022-01-03T16:00:00.000Z",
            "content_html": "<h1 id=\"重置root密码\"><a class=\"anchor\" href=\"#重置root密码\">#</a> 重置 root 密码</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">passwd</span> root</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#为了以后省去 sudo 输入密码。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> visudo</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#在文件最后加上</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>用户名 <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span> NOPASSWD: ALL</pre></td></tr></table></figure><h1 id=\"安装vim并设置主编辑器\"><a class=\"anchor\" href=\"#安装vim并设置主编辑器\">#</a> 安装 vim 并设置主编辑器</h1>\n<pre><code class=\"language-sh\">apt install vim -y\nselect-editor\n</code></pre>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zhu-jiyuan/picture_go/img/image-20220421130919271.png\" alt=\"image-20220421130919271\" /></p>\n<h2 id=\"给vi起别名\"><a class=\"anchor\" href=\"#给vi起别名\">#</a> 给 vi 起别名</h2>\n<pre><code class=\"language-sh\">echo &quot;alias vi=vim&quot; &gt;&gt; /etc/profile\nsource /etc/profile\n</code></pre>\n<h1 id=\"修改apt的源\"><a class=\"anchor\" href=\"#修改apt的源\">#</a> 修改 apt 的源</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#先安装 vim</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">vim</span> -y</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#好习惯，先备份原来的</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/apt/sources.list</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#把内容改成</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</pre></td></tr></table></figure><p>更新软件列表</p>\n<pre><code class=\"language-sh\">sudo apt update &amp; apt upgrade\n</code></pre>\n<h1 id=\"安装python\"><a class=\"anchor\" href=\"#安装python\">#</a> 安装 python</h1>\n<p>其实这里主要是因为 python 的一些版本问题。如果没有问题，可跳过</p>\n<pre><code class=\"language-sh\">sudo apt install python3\nsudo apt install python3-pip\n</code></pre>\n<h1 id=\"安装ssh-xrdp-firewalld\"><a class=\"anchor\" href=\"#安装ssh-xrdp-firewalld\">#</a> 安装 ssh &amp; xrdp &amp; firewalld</h1>\n<pre><code class=\"language-sh\">sudo apt install ssh\n\nsudo apt install xrdp\n\nsudo systemctl status xrdp\nsudo adduser xrdp ssl-cert  \nsudo systemctl restart xrdp\n\nsudo apt install firewalld\n</code></pre>\n",
            "tags": [
                "Linux",
                "Linux",
                "Ubuntu"
            ]
        }
    ]
}